`timescale 10 ns/ 10 ps
module BMP180_LOW_PACK_vlg_tst();
// test vector input registers
reg clk;
reg reset;
reg swId;
reg swShow;
reg swPush;
reg swSend;
// wires                                               
wire [7:0]  datasend;
wire [7:0]  out;
wire [3:0]  stateOut;
wire receive;
wire send;
wire start;

// assign statements (if any)                          
BMP180_LOW_PACK i1 (
// port map - connection between master ports and signals/registers   
	  .clk(clk),
	  .datasend(datasend),
	  .out(out),
	  .receive(receive),
	  .reset(reset),
	  .send(send),
	  .start(start),
	  .swId(swId),
	  .swShow(swShow),
	  .wsPush(swPush),
	  .wsSend(swSend),
	.stateOut(stateOut)
);

initial
begin
clk = 1'b0; 
swId = 1'b1;
swShow = 1'b1;
swPush = 1'b1;
swSend = 1'b1;
reset = 1'b1;
#500
reset = 1'b0;
#1500
reset = 1'b1;
#500
swId = 1'b0;
#1500
swId = 1'b1;
#1500
swSend=1'b0;
#1500
swSend=1'b1;
#1500
swSend=1'b0;
#1500
swSend=1'b1;
end

always
begin
#5 clk = ~clk; //1MHz
end

initial 
begin
#700000 swPush = 1'b0;
#300000 swPush = 1'b1;
#700000 swPush = 1'b0;
#300000 swPush = 1'b1;
#700000 swShow = 1'b0;
#300000 swShow = 1'b1;
#700000 swShow = 1'b0;
#300000 swShow = 1'b1;
#1000000 $stop;
end
                              
endmodule

